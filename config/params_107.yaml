# Online/Offline
mapping_online: true     # set to 'true' until mapping offline fixed (see Discussions in GitHub)
real_time: false         # in a slow CPU, real_time ensures to always output to latest odometry (possibly skipping points)

# Topics
points_topic: "/laser_horiz/clouds"
imus_topic: "/imu"

# Publishers
high_quality_publish: true   # true: Publishes the map without downsampling, can be slower. false: Publishes the downsampled map.  

# Extrinsics
estimate_extrinsics: true
print_extrinsics: true
initial_gravity: [0.0, 0.0, -9.807]
# Extrinsics LiDAR -> IMU
#hesai 107
I_Translation_L: [0.0050, -0.0000, -0.0972]
I_Rotation_L: [
    -0.0157,0.9999,-0.0018,
    0.9999,0.0157,0.0026,
    0.0026,-0.0018,-1.0000,
]
# Delays
empty_lidar_time: 0.1      # Should be at least [FULL_ROTATION_TIME]
real_time_delay: 0.1       # Should be at least [FULL_ROTATION_TIME] (without a modificated LiDAR driver)

# LiDAR
LiDAR_type: hesai       # Options: velodyne, hesai, ouster, custom
stamp_beginning: false     # (Usually: false) Is the pointcloud's stamp the last point's timestamp (end of rotation) or the first's (beggining of rotation)?
offset_beginning: false    # (Usual values: Velodyne = false, Ouster = true, HESAI = indiferent) Is the offset with respect the beginning of the rotation (i.e. point.time ~ [0, 0.1]) or with respect the end (i.e. point.time ~ [-0.1, 0])? For more information see Issue #14: https://github.com/Huguet57/LIMO-Velo/issues/14
LiDAR_noise: 0.003
full_rotation_time: 0.1
min_dist: 0.3                # Minimum distance: doesn't use points closer than this radius
downsample_rate: 1         # Downsampling rate: results show that this one can be up to 32 and still work, try it if you need a speedup
downsample_prec: 0.25      # Downsampling precision: Indoors, lower values (~0.2) work better. Outdoors, higher values (~0.5) lead to less degeneracy.

# IMU
imu_rate: 200              # Approximated IMU rate: only used to estimate when to start the algorithm
covariance_acceleration: 1.e-2
covariance_gyroscope: 1.e-4
covariance_bias_acceleration: 1.e-4
covariance_bias_gyroscope: 1.e-5

# Localizator
MAX_NUM_ITERS: 5
# LIMITS: [0.001] * 23
NUM_MATCH_POINTS: 18
MAX_DIST_PLANE: 2.0
PLANES_THRESHOLD: 4.e-2
# Localizator - Degeneracy
degeneracy_threshold: 5.           # Its magnitude depends on delta (see below), keeping it too high can cause blurry results
print_degeneracy_values: false     # Print the degeneracy eigenvalues to guess what the threshold must be for you

# Delta refinement
# Choose a set of times and field of view sizes (deltas) for the initialization.
# The delta (t2 - t1) that will be used through the algorithm therefore is the last one in the 'deltas' vector
# Tick the 'Localizator' box in RViz to see the initialization in action
Initialization:
#     # No initialization
#    times: []
#    deltas: [0.1]
    
    # With initialization
    times: [0.5, 1.0]
    deltas: [0.1, 0.05, 0.02]
